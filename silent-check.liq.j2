set("console.colorize", "auto")
set("log.file", false)
set("log.stdout", true)
set("log.level",3)

{% if server | d(False) %}
set("server.socket", true)
set("server.telnet",false)

set("server.socket.path", "{{ socket_path }}")
set("server.socket.permissions", {{ socket_perms | d(0600) }})
{% else %}
set("server.socket", false)
set("server.telnet", false)
{% endif %}

{% set min_noise_default = 0.0 %}
{% set max_blank_default = 20.0 %}
{% set threshold_default = -40.0 %}

{% for source in sources %}

def noise_{{ source.name }}()
  system('{{ silent_check_prom }} --noise --source {{ source.name }} --min_noise {{ source.min_noise | d(min_noise_default) }} --max_blank {{ source.max_blank | d(max_blank_default) }} --threshold {{ source.threshold | d(threshold_default) }}')
end

def blank_{{ source.name }}()
  system('{{ silent_check_prom }} --blank --source {{ source.name }} --min_noise {{ source.min_noise | d(min_noise_default) }} --max_blank {{ source.max_blank | d(max_blank_default) }} --threshold {{ source.threshold | d(threshold_default) }}')
end

noise_{{ source.name }}()
output.dummy(
    id='{{ source.name }}_dummy_out',
    on_blank(
        max_blank={{ source.max_blank | d(max_blank_default) }},
        min_noise={{ source.min_noise | d(min_noise_default) }},
        threshold={{ source.threshold | d(threshold_default) }},
        track_sensitive=false,
        on_noise=noise_{{ source.name }},
        blank_{{ source.name }},
        server.rms(
            id='{{ source.name }}_rms',
            audio_to_stereo(
                mksafe(
                    input.http(
                        id='{{ source.name }}_http',
                        '{{ source.url }}'
                    )
                )
            )
        )
    )
)

{% endfor %}
